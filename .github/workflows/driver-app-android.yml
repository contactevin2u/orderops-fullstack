name: driver-app Android Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "driver-app/**"
      - ".github/workflows/driver-app-android.yml"

concurrency:
  group: driver-app-android-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: driver-app
    env:
      CI: true
      EXPO_NO_TELEMETRY: 1
      API_BASE: ${{ secrets.API_BASE }}
      FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: driver-app/package-lock.json

      - name: Setup Java 17 (Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Install dependencies (include devDependencies)
        env:
          NODE_ENV: ""
        run: npm ci

      - name: Write google-services.json (from secret, no base64)
        run: |
          if [ -z "${GOOGLE_SERVICES_JSON:-}" ]; then
            echo "ERROR: Missing GOOGLE_SERVICES_JSON secret"; exit 1
          fi
          mkdir -p android/app
          VAL="${GOOGLE_SERVICES_JSON}"
          case "$VAL" in
            \"*) VAL="${VAL%\"}"; VAL="${VAL#\"}";;
            \'*) VAL="${VAL%\'}"; VAL="${VAL#\'}";;
          esac
          printf "%s" "$VAL" > android/app/google-services.json
          test -s android/app/google-services.json || { echo "ERROR: google-services.json empty"; exit 1; }

      - name: Prebuild native project
        run: npx expo prebuild --platform android --non-interactive --clean

      - name: Ensure android project exists
        run: test -d android && test -f android/gradlew

      - name: Pin Kotlin/JVM & Gradle memory (post-prebuild)
        run: |
          {
            echo "kotlin.jvm.target=17"
            if ! grep -q "^org\.gradle\.jvmargs=" android/gradle.properties; then
              echo "org.gradle.jvmargs=-Xmx4096m -Dkotlin.daemon.jvm.options=-Xmx2048m"
            fi
          } >> android/gradle.properties
          tail -n +1 android/gradle.properties

      - name: Build release APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew --no-daemon --stacktrace --info :app:assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: driver-app-release
          path: driver-app/android/app/build/outputs/apk/release/*.apk

