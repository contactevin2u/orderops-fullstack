name: Build Android Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXPO_NO_TELEMETRY: 1
      NODE_ENV: production
      CI: true
    defaults:
      run:
        working-directory: driver-app
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: driver-app/package-lock.json
      - name: Load DRIVER_APP_ENV secret
        env:
          DRIVER_APP_ENV: ${{ secrets.DRIVER_APP_ENV || vars.DRIVER_APP_ENV }}
        run: |
          if [ -z "${DRIVER_APP_ENV}" ]; then
            echo "ERROR: DRIVER_APP_ENV is missing. Add a repo/org Actions Secret (or Variable) with KEY=VALUE lines." >&2
            exit 1
          fi
          printf "%s\n" "${DRIVER_APP_ENV}" > .env
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            case "$line" in \#*) continue;; esac
            echo "$line" >> "$GITHUB_ENV"
          done < .env

      - name: Create google-services.json from $GOOGLE_SERVICES_JSON
        run: |
          if [ -z "${GOOGLE_SERVICES_JSON}" ]; then
            echo "ERROR: GOOGLE_SERVICES_JSON not found in .env/DRIVER_APP_ENV"; exit 1
          fi
          CLEAN_JSON="${GOOGLE_SERVICES_JSON}"
          CLEAN_JSON="${CLEAN_JSON#\"}"
          CLEAN_JSON="${CLEAN_JSON%\"}"
          CLEAN_JSON="${CLEAN_JSON#\'}"
          CLEAN_JSON="${CLEAN_JSON%\'}"
          printf "%s" "${CLEAN_JSON}" > google-services.json
          test -s google-services.json || { echo "ERROR: google-services.json is empty"; exit 1; }

      - name: Install dependencies
        run: npm ci

      - name: Prebuild Android project
        run: npx expo prebuild --platform android --non-interactive --clean

      - name: Ensure android project generated
        run: test -d android && test -f android/gradlew

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Build release APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew --no-daemon assembleRelease

      - uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: driver-app/android/app/build/outputs/apk/release/*.apk
