name: Build Android Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXPO_NO_TELEMETRY: 1
      NODE_ENV: production
      CI: true
    defaults:
      run:
        working-directory: driver-app
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: driver-app/package-lock.json
      - name: Create .env from secret
        run: |
          if [ -z "${{ secrets.DRIVER_APP_ENV }}" ]; then
            echo "DRIVER_APP_ENV secret is not set" >&2
            exit 1
          fi
          printf '%s' "${{ secrets.DRIVER_APP_ENV }}" > .env
      - name: Export .env to GITHUB_ENV
        run: |
          grep -v '^#' .env | grep -E '^[A-Za-z_][A-Za-z0-9_]*=' >> "$GITHUB_ENV"
      - name: Materialize google-services.json
        run: |
          printf '%s' "$GOOGLE_SERVICES_JSON" | sed "s/^'//; s/'$//" > google-services.json
          test -s google-services.json
      - name: Install dependencies
        run: npm ci
      - name: Prebuild Android project
        run: npx expo prebuild --platform android --non-interactive --clean
      - name: Ensure android project generated
        run: test -d android && test -f android/gradlew
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
          cache-dependency-path: driver-app/android/gradle/wrapper/gradle-wrapper.properties
      - name: Build release APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew --no-daemon assembleRelease
      - uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: driver-app/android/app/build/outputs/apk/release/*.apk
