name: Build Driver Android (Debug)

on:
  workflow_dispatch:
  push:
    paths:
      - 'driver-app/**'
      - '.github/workflows/driver-android-debug.yml'

jobs:
  build-android-debug:
    runs-on: ubuntu-latest

    env:
      API_BASE: https://orderops-api-v1.onrender.com
      EXPO_NO_TELEMETRY: 1
      NODE_ENV: production
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: driver-app/node_modules
          key: ${{ runner.os }}-driverapp-npm-${{ hashFiles('driver-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-driverapp-npm-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: driver-app/package-lock.json

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # If you prefer NOT to commit google-services.json, add a repo secret
      # GOOGLE_SERVICES_JSON with the file content and uncomment:
      # - name: Write google-services.json from secret
      #   run: |
      #     mkdir -p driver-app
      #     echo "$GOOGLE_SERVICES_JSON" > driver-app/google-services.json
      #   env:
      #     GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Sanity check (android.package vs google-services.json)
        run: |
          node -e "const fs=require('fs');\
          const p='driver-app/google-services.json';\
          if(!fs.existsSync(p)){console.error('Missing '+p+' â€” commit it or provide GOOGLE_SERVICES_JSON secret.');process.exit(1)}\
          const gs=JSON.parse(fs.readFileSync(p,'utf8'));\
          const pkg=(gs.client||[]).find(c=>c.client_info&&c.client_info.android_client_info)?.client_info.android_client_info.package_name;\
          const conf=fs.readFileSync('driver-app/app.config.ts','utf8');\
          const m=/android:\\s*\\{[\\s\\S]*?package:\\s*\"([^\"]+)\"/m.exec(conf);\
          if(!pkg){console.error('google-services.json: package_name not found');process.exit(1)}\
          if(!m){console.error('app.config.ts: android.package not found');process.exit(1)}\
          if(pkg!==m[1]){console.error('\\nPACKAGE MISMATCH\\n  google-services.json = '+pkg+'\\n  app.config.ts        = '+m[1]+'\\nFix one to match the other.');process.exit(1)}\
          console.log('Package OK:', pkg);"

      - name: Install JS deps (lockfile-safe)
        working-directory: driver-app
        run: |
          if [ ! -f package-lock.json ]; then
            npm i --package-lock-only
          fi
          npm ci

      - name: Prebuild native Android project (clean)
        working-directory: driver-app
        run: npx expo prebuild --platform android --non-interactive --clean

      - name: Show generated Android identifiers
        working-directory: driver-app
        run: |
          echo "== AndroidManifest package =="
          sed -n '1,120p' android/app/src/main/AndroidManifest.xml | grep -m1 'package=' || true
          echo "== app/build.gradle applicationId =="
          grep -m1 'applicationId' android/app/build.gradle || true
          echo "== google-services.json in android/app =="
          ls -l android/app/google-services.json || true

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('driver-app/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        working-directory: driver-app/android
        run: chmod +x ./gradlew

      - name: Build debug APK
        working-directory: driver-app/android
        run: ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: driver-app-debug-apk
          path: driver-app/android/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Gradle logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: |
            driver-app/android/.gradle
            driver-app/android/app/build/outputs/logs
            driver-app/android/build.gradle
            driver-app/android/app/build.gradle
            driver-app/android/gradle/wrapper/gradle-wrapper.properties
