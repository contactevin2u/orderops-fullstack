name: Android Release APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ "driver-app/**" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      API_BASE: ${{ secrets.API_BASE }}
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: android-actions/setup-android@v3

      - name: Install SDK packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "cmdline-tools;latest"

      - name: Materialize google-services.json
        working-directory: driver-app
        run: |
          mkdir -p app
          printf "%s" "$GOOGLE_SERVICES_JSON" > app/google-services.json
          test -s app/google-services.json

      - name: Create local.properties with API_BASE
        working-directory: driver-app
        run: echo "API_BASE=$API_BASE" >> local.properties

      - name: Create debug keystore and show SHA-1
        working-directory: driver-app
        run: |
          echo "ðŸ”§ Creating debug keystore..."
          mkdir -p ~/.android
          echo "ðŸ”‘ Generating debug keystore and extracting SHA-1..."
          keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
          echo ""
          echo "âœ… Debug keystore created! Here's your SHA-1 fingerprint:"
          keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android | grep SHA1
          echo ""
          echo "ðŸ“‹ Copy the SHA1 value above and add it to Firebase Console!"

      - name: (Optional) Materialize Firebase service account
        if: ${{ env.FIREBASE_SERVICE_ACCOUNT_JSON != '' }}
        working-directory: driver-app
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > firebase-sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/firebase-sa.json" >> $GITHUB_ENV


      - name: Build Debug APK (for testing)
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.9
          build-root-directory: driver-app
          arguments: ":app:assembleDebug -PAPI_BASE=${{ secrets.API_BASE }}"
        env:
          # Increase Gradle JVM heap size
          GRADLE_OPTS: "-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"
          # Increase Kotlin daemon heap size
          KOTLIN_DAEMON_JVMARGS: "-Xmx2g"
          # Increase KAPT heap size
          KAPT_OPTS: "-Xmx2g"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: driver-app-debug-apk
          path: driver-app/app/build/outputs/apk/debug/*.apk
