name: Android Release (driver-app)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: driver-app

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: driver-app/package-lock.json

      - name: ☕ Setup Java (Temurin 17) with Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 🔐 Validate required secrets
        env:
          API_BASE: ${{ secrets.API_BASE }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          set -euo pipefail
          miss=0
          for k in API_BASE FIREBASE_PROJECT_ID FIREBASE_ANDROID_APP_ID GOOGLE_SERVICES_JSON; do
            v="${!k:-}"
            if [ -z "$v" ]; then echo "Missing secret: $k" >&2; miss=1; fi
          done
          exit $miss

      - name: 📝 Write .env for app.config.ts (UPPER_CASE keys)
        env:
          API_BASE: ${{ secrets.API_BASE }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
        run: |
          cat > .env <<'EOF'
          API_BASE=${API_BASE}
          FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
          FIREBASE_ANDROID_APP_ID=${FIREBASE_ANDROID_APP_ID}
          FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
          EOF
          # Also export to current job env for metro/expo
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            case "$line" in \#*) continue;; esac
            echo "$line" >> "$GITHUB_ENV"
          done < .env

      - name: 📄 Create google-services.json (project root of driver-app)
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          printf "%s" "$GOOGLE_SERVICES_JSON" > google-services.json
          test -s google-services.json

      - name: 📦 Install deps
        run: npm ci

      - name: 🔧 Align RN deps via Expo
        env:
          CI: 1
        run: |
          npx expo install react-native-reanimated react-native-gesture-handler || true

      - name: 🧹 Clean prebuild & generate android
        env:
          CI: 1
        run: npm run android:prebuild

      - name: 🧪 Doctor (optional)
        run: npx expo doctor || true

      - name: 🏗️ Assemble release APK
        working-directory: driver-app/android
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: ./gradlew :app:assembleRelease --no-daemon

      - name: 📦 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: driver-app-release-apk
          path: |
            driver-app/android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

